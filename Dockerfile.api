# ============================
# 1. Dependencies stage
# ============================
FROM node:20-slim AS deps
WORKDIR /app

# Устанавливаем только prod и dev зависимости
COPY package*.json ./
RUN npm ci

# ============================
# 2. Build stage
# ============================
FROM node:20-slim AS build
WORKDIR /app

# Копируем зависимости
COPY --from=deps /app/node_modules ./node_modules

# Копируем весь код проекта
COPY . .

# Генерируем Prisma Client с нужным binaryTarget
RUN npx prisma generate --schema=apps/api/prisma/schema.prisma

# Сборка приложения (исправь на свой build-скрипт, если другой)
RUN npm run build

# Убираем dev-зависимости
RUN npm prune --omit=dev

# ============================
# 3. Runtime stage
# ============================
FROM node:20-slim AS runner
ENV NODE_ENV=production
WORKDIR /app

# Устанавливаем tini для корректного завершения процессов (опционально, но полезно)
RUN apt-get update && apt-get install -y --no-install-recommends tini && rm -rf /var/lib/apt/lists/*

# Копируем собранный проект и зависимости
COPY --from=build /app ./

# Обеспечиваем прослушивание на всех интерфейсах
ENV HOST=0.0.0.0
EXPOSE 3000

# Запуск приложения через tini
ENTRYPOINT ["/usr/bin/tini", "--"]

# Исправь путь, если у тебя другой входной файл
CMD ["node", "apps/api/dist/main.js"]
