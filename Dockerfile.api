# ============================
# 1) Dependencies
# ============================
FROM node:20-slim AS deps
WORKDIR /app/apps/api

# Копируем только манифесты API
COPY apps/api/package*.json ./

# Если нет package-lock.json — fallback на npm install
RUN npm ci || npm install

# ============================
# 2) Build (+ Prisma generate)
# ============================
FROM node:20-slim AS build
WORKDIR /app/apps/api

# Зависимости
COPY --from=deps /app/apps/api/node_modules ./node_modules

# Код API
COPY apps/api ./ 

# Prisma client под Debian/OpenSSL 3
RUN npx prisma generate --schema=./prisma/schema.prisma

# Сборка NestJS (если у тебя другой скрипт — поменяй)
RUN npm run build

# Оставляем только прод-зависимости
RUN npm prune --omit=dev

# ============================
# 3) Runtime
# ============================
FROM node:20-slim AS runner
ENV NODE_ENV=production
WORKDIR /app/apps/api

# Акуратное завершение в k8s (опционально)
RUN apt-get update && apt-get install -y --no-install-recommends \
    tini libssl3 ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Кладём только нужное
COPY --from=build /app/apps/api/node_modules ./node_modules
COPY --from=build /app/apps/api/dist ./dist
COPY --from=build /app/apps/api/prisma ./prisma

# На всякий — бинд на все интерфейсы
ENV HOST=0.0.0.0
EXPOSE 3000

ENTRYPOINT ["/usr/bin/tini","--"]
CMD ["node","dist/main.js"]
