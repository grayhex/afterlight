/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth/register": {
    post: operations["AuthController_register"];
  };
  "/auth/login": {
    post: operations["AuthController_login"];
  };
  "/auth/logout": {
    post: operations["AuthController_logout"];
  };
  "/auth/me": {
    get: operations["AuthController_me"];
  };
  "/vaults": {
    get: operations["VaultsController_list"];
    post: operations["VaultsController_create"];
  };
  "/vaults/{id}": {
    get: operations["VaultsController_get"];
  };
  "/vaults/{id}/settings": {
    patch: operations["VaultsController_updateSettings"];
  };
  "/verifiers": {
    get: operations["VerifiersController_list"];
  };
  "/verifiers/invitations": {
    post: operations["VerifiersController_invite"];
  };
  "/verifiers/invitations/{vaultId}/{userId}/accept": {
    post: operations["VerifiersController_accept"];
  };
  "/verification-events": {
    get: operations["VerificationEventsController_list"];
    post: operations["VerificationEventsController_start"];
  };
  "/verification-events/{id}": {
    get: operations["VerificationEventsController_get"];
  };
  "/verification-events/{id}/confirm/{userId}": {
    post: operations["VerificationEventsController_confirm"];
  };
  "/verification-events/{id}/deny/{userId}": {
    post: operations["VerificationEventsController_deny"];
  };
  "/blocks": {
    get: operations["BlocksController_list"];
    post: operations["BlocksController_create"];
  };
  "/blocks/{id}": {
    get: operations["BlocksController_get"];
    delete: operations["BlocksController_remove"];
  };
  "/blocks/{id}/recipients": {
    /** List recipients assigned to a block */
    get: operations["BlocksController_listRecipients"];
    /** Assign a recipient to a block */
    post: operations["BlocksController_assignRecipient"];
  };
  "/recipients": {
    get: operations["RecipientsController_search"];
    post: operations["RecipientsController_create"];
  };
  "/blocks/{id}/public": {
    get: operations["PublicLinksController_get"];
    put: operations["PublicLinksController_upsert"];
    delete: operations["PublicLinksController_disable"];
  };
  "/vaults/{vaultId}/heartbeat": {
    get: operations["HeartbeatsController_getConfig"];
    patch: operations["HeartbeatsController_updateConfig"];
  };
  "/heartbeats/ping": {
    post: operations["HeartbeatsController_ping"];
  };
  "/orchestration/start": {
    post: operations["OrchestratorController_start"];
  };
  "/orchestration/decision": {
    post: operations["OrchestratorController_decide"];
  };
  "/healthz": {
    get: operations["HealthController_healthz"];
  };
  "/readyz": {
    get: operations["HealthController_readyz"];
  };
  "/users": {
    get: operations["UsersController_list"];
    post: operations["UsersController_create"];
  };
  "/users/{id}": {
    get: operations["UsersController_get"];
    delete: operations["UsersController_remove"];
    patch: operations["UsersController_update"];
  };
  "/plans": {
    get: operations["PlansController_list"];
    post: operations["PlansController_create"];
  };
  "/plans/{id}": {
    get: operations["PlansController_get"];
    delete: operations["PlansController_remove"];
    patch: operations["PlansController_update"];
  };
  "/subscriptions": {
    get: operations["SubscriptionsController_list"];
    post: operations["SubscriptionsController_create"];
  };
  "/subscriptions/{id}": {
    get: operations["SubscriptionsController_get"];
    delete: operations["SubscriptionsController_remove"];
    patch: operations["SubscriptionsController_update"];
  };
  "/audit-logs": {
    get: operations["AuditLogsController_list"];
    post: operations["AuditLogsController_create"];
  };
  "/audit-logs/{id}": {
    get: operations["AuditLogsController_get"];
    delete: operations["AuditLogsController_remove"];
    patch: operations["AuditLogsController_update"];
  };
  "/recovery-shares": {
    get: operations["RecoverySharesController_list"];
    post: operations["RecoverySharesController_create"];
  };
  "/recovery-shares/{id}": {
    get: operations["RecoverySharesController_get"];
    delete: operations["RecoverySharesController_remove"];
    patch: operations["RecoverySharesController_update"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ErrorDto: {
      /** @example 400 */
      statusCode: number;
      /** @example Bad Request */
      message: string;
      /** @example Validation failed */
      error?: string;
    };
    RegisterDto: {
      email: string;
      password: string;
      /** @enum {string} */
      role?: "Owner" | "Verifier" | "Admin";
    };
    LoginDto: {
      email: string;
      password: string;
    };
    CreateVaultDto: {
      /** @default false */
      is_demo?: boolean;
      /** @default 3 */
      quorum_threshold?: number;
      /** @default 5 */
      max_verifiers?: number;
      /** @default 60 */
      heartbeat_timeout_days?: number;
      /** @default 24 */
      grace_hours?: number;
    };
    UpdateVaultSettingsDto: {
      quorum_threshold?: number;
      max_verifiers?: number;
      heartbeat_timeout_days?: number;
      grace_hours?: number;
      /** @description Optional primary verifier id */
      primary_verifier_id?: string;
    };
    InviteVerifierDto: {
      vault_id: string;
      /** @description email for MVP */
      email: string;
      /**
       * @description expires in hours (default 7 days)
       * @default 168
       */
      expires_in_hours?: number;
    };
    StartVerificationEventDto: {
      vault_id: string;
    };
    DecisionDto: {
      /** Format: uuid */
      vault_id: string;
      /**
       * Format: uuid
       * @description ID пользователя (верификатора)
       */
      user_id: string;
      /** @enum {string} */
      decision: "Confirm" | "Deny";
      signature?: string;
    };
    CreateBlockDto: {
      /** Format: uuid */
      vault_id: string;
      /** @enum {string} */
      type: "text" | "file" | "url";
      /** @description Wrapped DEK (base64 or JWE compact) */
      dek_wrapped: string;
      /** @description Arbitrary JSON metadata (stringified or object) */
      metadata?: Record<string, never>;
      /** @default [] */
      tags?: string[];
      /** @description Encrypted payload size in bytes */
      size?: number;
      checksum?: string;
      /** @default false */
      is_public?: boolean;
    };
    AssignRecipientDto: {
      /** Format: uuid */
      recipient_id: string;
      /** @description DEK wrapped for this recipient (base64 or JWE compact) */
      dek_wrapped_for_recipient: string;
    };
    CreateRecipientDto: {
      /** @description Email получателя (уникальный идентификатор) */
      contact: string;
      /** @description Публичный ключ получателя (если уже есть) */
      pubkey?: string;
    };
    UpdatePublicLinkDto: {
      enabled: boolean;
      publish_from?: string;
      publish_until?: Record<string, never>;
      max_views?: Record<string, unknown> | null;
    };
    UpdateHeartbeatDto: {
      /** @enum {string} */
      method?: "auto" | "manual";
      /** @description Таймаут неактивности в днях */
      timeout_days?: number;
    };
    HeartbeatPingDto: {
      /** Format: uuid */
      vault_id: string;
      /** @enum {string} */
      method?: "auto" | "manual";
    };
    StartEventDto: {
      /** Format: uuid */
      vault_id: string;
    };
    UserDto: {
      id: string;
      email: string;
      phone?: string;
      twoFaEnabled: boolean;
      /** @enum {string} */
      role: "Owner" | "Verifier" | "Admin";
      locale: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
    CreateUserDto: {
      email: string;
      phone?: string;
      passwordHash?: string;
      passkeyPub?: string;
      /** @default false */
      twoFaEnabled?: boolean;
      /**
       * @default Owner
       * @enum {string}
       */
      role?: "Owner" | "Verifier" | "Admin";
      /** @default ru-RU */
      locale?: string;
    };
    UpdateUserDto: {
      email?: string;
      phone?: string;
      passwordHash?: string;
      passkeyPub?: string;
      /** @default false */
      twoFaEnabled?: boolean;
      /**
       * @default Owner
       * @enum {string}
       */
      role?: "Owner" | "Verifier" | "Admin";
      /** @default ru-RU */
      locale?: string;
    };
    CreatePlanDto: {
      /** @enum {string} */
      tier: "Free" | "Pro" | "Business";
      limits: Record<string, never>;
    };
    UpdatePlanDto: {
      /** @enum {string} */
      tier?: "Free" | "Pro" | "Business";
      limits?: Record<string, never>;
    };
    CreateSubscriptionDto: {
      userId: string;
      planId: string;
      /** @enum {string} */
      status: "trial" | "active" | "canceled";
      currentPeriodEnd: string;
    };
    UpdateSubscriptionDto: {
      userId?: string;
      planId?: string;
      /** @enum {string} */
      status?: "trial" | "active" | "canceled";
      currentPeriodEnd?: string;
    };
    CreateAuditLogDto: {
      /** @enum {string} */
      actorType: "User" | "System";
      actorId: string;
      action: string;
      targetId?: string;
      targetType?: string;
      hash?: string;
    };
    UpdateAuditLogDto: {
      /** @enum {string} */
      actorType?: "User" | "System";
      actorId?: string;
      action?: string;
      targetId?: string;
      targetType?: string;
      hash?: string;
    };
    CreateRecoveryShareDto: {
      vaultId: string;
      shareIndex: number;
      shareCipher: string;
    };
    UpdateRecoveryShareDto: {
      vaultId?: string;
      shareIndex?: number;
      shareCipher?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  AuthController_register: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["RegisterDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  AuthController_login: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  AuthController_logout: {
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  AuthController_me: {
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VaultsController_list: {
    parameters: {
      query: {
        cursor: string;
        limit: number;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VaultsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateVaultDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VaultsController_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VaultsController_updateSettings: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateVaultSettingsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VerifiersController_list: {
    parameters: {
      query: {
        vault_id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VerifiersController_invite: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["InviteVerifierDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VerifiersController_accept: {
    parameters: {
      path: {
        vaultId: string;
        userId: string;
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VerificationEventsController_list: {
    parameters: {
      query: {
        vault_id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VerificationEventsController_start: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["StartVerificationEventDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VerificationEventsController_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VerificationEventsController_confirm: {
    parameters: {
      path: {
        id: string;
        userId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DecisionDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  VerificationEventsController_deny: {
    parameters: {
      path: {
        id: string;
        userId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DecisionDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  BlocksController_list: {
    parameters: {
      query: {
        vault_id: string;
        cursor: string;
        limit: number;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  BlocksController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateBlockDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  BlocksController_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  BlocksController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  /** List recipients assigned to a block */
  BlocksController_listRecipients: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  /** Assign a recipient to a block */
  BlocksController_assignRecipient: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignRecipientDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  RecipientsController_search: {
    parameters: {
      query?: {
        /** @description Подстрока для поиска по contact */
        q?: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  RecipientsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateRecipientDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  PublicLinksController_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  PublicLinksController_upsert: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePublicLinkDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  PublicLinksController_disable: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  HeartbeatsController_getConfig: {
    parameters: {
      path: {
        vaultId: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  HeartbeatsController_updateConfig: {
    parameters: {
      path: {
        vaultId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateHeartbeatDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  HeartbeatsController_ping: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HeartbeatPingDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  OrchestratorController_start: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["StartEventDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  OrchestratorController_decide: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DecisionDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  HealthController_healthz: {
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  HealthController_readyz: {
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  UsersController_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["UserDto"][];
        };
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  UsersController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["UserDto"];
        };
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  UsersController_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["UserDto"];
        };
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  UsersController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["UserDto"];
        };
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  UsersController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["UserDto"];
        };
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  PlansController_list: {
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  PlansController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePlanDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  PlansController_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  PlansController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  PlansController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePlanDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  SubscriptionsController_list: {
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  SubscriptionsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateSubscriptionDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  SubscriptionsController_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  SubscriptionsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  SubscriptionsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateSubscriptionDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  AuditLogsController_list: {
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  AuditLogsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateAuditLogDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  AuditLogsController_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  AuditLogsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  AuditLogsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateAuditLogDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  RecoverySharesController_list: {
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  RecoverySharesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateRecoveryShareDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  RecoverySharesController_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  RecoverySharesController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
  RecoverySharesController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateRecoveryShareDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
      400: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      401: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["ErrorDto"];
        };
      };
    };
  };
}
