# Build stage (Node 20)
FROM node:20-slim AS build
WORKDIR /app/apps/web

# Install deps (use lockfile if present)
COPY apps/web/package*.json ./
RUN npm ci || npm install

# Copy sources and build
COPY apps/web ./
# Adjust the build script if your web app uses a different command
RUN npm run build

# Normalize build output to a single folder (web-out)
# Supported outputs:
# - Vite / most:            dist/
# - CRA (React):            build/
# - Next.js `next export`:  out/
# - Nuxt 3 (nitro static):  .output/public/
RUN set -eux;     mkdir -p /app/apps/web/web-out;     if [ -d "dist" ]; then       cp -a dist/. web-out/;     elif [ -d "build" ]; then       cp -a build/. web-out/;     elif [ -d "out" ]; then       cp -a out/. web-out/;     elif [ -d ".output/public" ]; then       cp -a .output/public/. web-out/;     else       echo "No build output found (expected dist/ or build/ or out/ or .output/public)";       echo "Files in current dir:"; ls -la;       exit 1;     fi

# Runtime stage (Nginx serves static SPA)
FROM nginx:alpine AS runner

# Clean default config and add our SPA config
RUN rm -f /etc/nginx/conf.d/default.conf
COPY apps/web/deploy/nginx.conf /etc/nginx/conf.d/default.conf

# Copy normalized build artifacts
COPY --from=build /app/apps/web/web-out /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
